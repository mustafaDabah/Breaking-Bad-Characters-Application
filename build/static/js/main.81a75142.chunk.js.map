{"version":3,"sources":["Components/useFetch.js","ContextAPI/AppReducer.js","ContextAPI/GlobalState.js","Components/Header.js","Components/SearchBar.js","Components/Card.js","Components/Pagination.js","Components/CardList.js","Components/Home.js","App.js","index.js"],"names":["useFetch","url","useState","loading","setLoading","data","setData","useEffect","a","axios","get","console","log","fetchData","AppReducer","state","action","type","search","payload","characters","initialState","GlobalContext","createContext","GlobalProvider","children","useReducer","dispatch","Provider","value","Header","className","SearchBar","useContext","searchTerm","setSearchTerm","addSearch","placeholder","onChange","e","target","Card","image","birthday","name","nickname","id","alt","src","to","Pagination","pageCount","changePage","previousLabel","nextLabel","onPageChange","containerClassName","previousLinkClassName","nextLinkClassName","disabledClassName","activeClassName","CardList","currentPage","setCurrentPage","charactersPerPage","addCharacters","indexOfLastChar","indexOfFirstChar","currentCharacters","slice","Math","ceil","length","isSearch","filterCharacters","filter","character","toLowerCase","includes","map","item","img","char_id","selected","Home","App","LazyCharacter","React","lazy","Suspense","fallback","exact","path","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.81a75142.chunk.js","sourcesContent":["import {useEffect , useState} from 'react';\r\nimport axios from 'axios';\r\n\r\n\r\n\r\nfunction useFetch(url) {\r\n    const [loading , setLoading] = useState(false);\r\n    const [data , setData] = useState([])\r\n\r\n    // fetch data \r\n     useEffect(() => { \r\n       const fetchData = async () => {\r\n          try {\r\n            const {data} = await axios.get(url);\r\n            setLoading(true);\r\n            setData(data);\r\n          }catch (err) {\r\n            console.log(err);\r\n          }\r\n       }\r\n         fetchData();\r\n    } ,[url]);\r\n\r\n    return {loading , data }\r\n}\r\n\r\nexport default useFetch\r\n","const AppReducer = (state , action) => {\r\n    switch (action.type) {\r\n        case \"ADD_SEARCH\":\r\n            return {\r\n                ...state, \r\n                search:action.payload\r\n            };\r\n        case \"ADD_CHARACTERS\" :\r\n            return {\r\n                ...state ,\r\n                characters:action.payload\r\n            }   \r\n        default:\r\n            return state;\r\n    }\r\n}\r\nexport default AppReducer","import React , {createContext , useReducer} from 'react';\r\nimport AppReducer from './AppReducer';\r\n// initialState\r\nconst initialState = {\r\n    characters:[],\r\n    search:\"\"\r\n}\r\n// create context\r\nexport const GlobalContext = createContext(initialState);\r\n// Provider component \r\nexport const GlobalProvider = ({children}) => {\r\n    const [state, dispatch] = useReducer(AppReducer, initialState);\r\n    return (\r\n        <GlobalContext.Provider value={{\r\n            characters:state.characters,\r\n            search:state.search,\r\n            dispatch\r\n        }} >\r\n            {children}\r\n        </GlobalContext.Provider>\r\n    )\r\n}","import React from 'react'\r\n\r\nfunction Header() {\r\n    return (\r\n        <div className=\"header\">\r\n            <h1>breaking bad characters Application</h1>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import React , {useContext , useState ,useEffect } from 'react';\r\nimport { GlobalContext } from '../ContextAPI/GlobalState';\r\n\r\n\r\nfunction SearchBar() {\r\n    const {dispatch} = useContext(GlobalContext);\r\n    const [searchTerm , setSearchTerm] = useState(\"\");\r\n    // handle change input \r\n    const handleChange = (e) => {\r\n        setSearchTerm(e.target.value);\r\n    } \r\n    // add search function \r\n    const addSearch = (searchTerm) => {\r\n        dispatch({\r\n            type:\"ADD_SEARCH\",\r\n            payload:searchTerm\r\n        });\r\n    }\r\n    useEffect(() => {\r\n        addSearch(searchTerm);\r\n    } , [searchTerm])\r\n\r\n    return (\r\n        <>\r\n            <form>\r\n                <input type='text' placeholder=\"search to characters\" value={searchTerm} onChange={handleChange} />\r\n            </form>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SearchBar\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction Card({image , birthday, name , nickname , id }) {\r\n    return (\r\n        <div className=\"card-body\">\r\n           <img alt=\"img pokemon\" src={image} />\r\n           <h3>name : {name}</h3>\r\n           <h3>birthday : {birthday} </h3>\r\n           <h3>nickname : {nickname} </h3>\r\n           <Link to={`/character/${id}`}>show details </Link>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Card;\r\n","import React from 'react';\r\nimport ReactPaginate from 'react-paginate';\r\n\r\nfunction Pagination({pageCount , changePage }) {\r\n   \r\n    return (\r\n        <div>\r\n            <ReactPaginate\r\n              previousLabel={\"Previous\"}\r\n              nextLabel={\"Next\"}\r\n              pageCount={pageCount}\r\n              onPageChange={changePage}\r\n              containerClassName={\"paginationBttns\"}\r\n              previousLinkClassName={\"previousBttn\"}\r\n              nextLinkClassName={\"nextBttn\"}\r\n              disabledClassName={\"paginationDisabled\"}\r\n              activeClassName={\"paginationActive\"}    \r\n             />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Pagination\r\n","import React , {useContext , useEffect , useState} from 'react';\r\nimport { GlobalContext } from '../ContextAPI/GlobalState';\r\nimport Card from './Card';\r\nimport Pagination from './Pagination';\r\nimport useFetch from './useFetch';\r\n\r\nfunction CardList() {\r\n    const {characters , search , dispatch } = useContext(GlobalContext);\r\n    const {loading , data} = useFetch('https://www.breakingbadapi.com/api/characters');\r\n    const [currentPage , setCurrentPage] = useState(1);\r\n    const [charactersPerPage] = useState(8);\r\n\r\n    // add characters to characters state by context \r\n    const addCharacters = (data) => {\r\n      dispatch({\r\n        type:\"ADD_CHARACTERS\",\r\n        payload:data\r\n      })\r\n    }\r\n    useEffect (() => {\r\n      addCharacters(data)\r\n    },[data])\r\n    \r\n    // paginate functions \r\n    const indexOfLastChar = currentPage * charactersPerPage ;\r\n    const indexOfFirstChar = indexOfLastChar - charactersPerPage ;\r\n    // current Characters \r\n    const currentCharacters = characters.slice(indexOfFirstChar , indexOfLastChar);\r\n    // page count \r\n    let pageCount = Math.ceil(characters.length / charactersPerPage) ;\r\n    // paginate display count when search \r\n    const isSearch = search.length >= 1 ? 1 : pageCount \r\n    const changePage = ({selected}) => {\r\n      setCurrentPage(selected + 1 );\r\n    };\r\n    \r\n    // filter characters function search \r\n    const filterCharacters = search.length <= 0 ? (currentCharacters) :\r\n    (\r\n      characters.filter((character) => \r\n      character.name.toLowerCase().includes(search.toLowerCase()\r\n      )) \r\n    );\r\n    return (\r\n      <div className=\"card-list\">\r\n        <div className=\"cards-container\">\r\n            {!loading && <div>loading data...</div>}\r\n            {data && filterCharacters.map(item =>\r\n              <Card \r\n                key={item.char_id} \r\n                name={item.name}\r\n                birthday={item.birthday}\r\n                image={item.img}\r\n                nickname={item.nickname} \r\n                id={item.char_id}\r\n                />\r\n            )}\r\n        </div>\r\n         <Pagination changePage={changePage} pageCount={isSearch} />\r\n       </div>\r\n    )\r\n}\r\n\r\nexport default CardList\r\n","import React from 'react';\r\nimport Header from './Header';\r\nimport SearchBar from './SearchBar';\r\nimport CardList from './CardList';\r\n\r\nfunction Home() {\r\n    return (\r\n        <div>\r\n            <Header/>\r\n            <SearchBar/>\r\n            <CardList/>  \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home\r\n","import React from 'react';\nimport { GlobalProvider } from './ContextAPI/GlobalState';\nimport {BrowserRouter as Router , Route} from 'react-router-dom';\nimport Home from './Components/Home';\n// import Character from './Components/Character';\n\nfunction App () {\n  // lazy component \n  const LazyCharacter = React.lazy(() => import(\"./Components/Character\"));\n\n  return (\n    <Router>\n      <GlobalProvider>\n        <div className=\"app\">\n          <React.Suspense fallback=\"loading...\">\n            <Route exact path=\"/\" component={Home} />\n            <Route exact path=\"/character/:id\" component={LazyCharacter} />\n          </React.Suspense>\n        </div>\n      </GlobalProvider> \n    </Router>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}